ESPShell has API to register and manipulate sketch variables, although variable
types are limited to simple C types (unsigned/signed int, char, short, float or 
generic void * pointer). Arrays of abovementioned simple types are supported as 
well

In order to make an arbitrary sketch variable to be visible in the ESPShell
one has to *register* it.

Registration is done with convar_add() macro. There are also convar_addp() 
and convar_adda() macros for registering pointers and arrays

Typical use in Arduino sketch:


  static int some_variable;
  unsigned char *pointer;
  char array[10];

  void setup() {

    convar_add(some_variable);
    convar_addp(pointer);
    convar_adda(array);
  }

There are 3 different variables defined in the code snippet above: int, pointer
and an array. All three are registered with appropriate convar_addX() macros
and after this is done these variables become accessible from the shell by using
"var NAME" and "show memory ADDRESS" commands


Entered without arguments, "var" command displays a list of registered variables:

    esp32#>var
    % Sketch variables:
    % Variable X name | sizeof(X) |     typeof(X)    |     Value
    %-----------------+-----------+------------------+----------------
    %           table |         4 |            int * |       0x3ffbdb88
    %              a4 |         4 |          float * |       0x3ffbdbb4
    %              a3 |         4 |            float |        10.000000
    %              a2 |         4 |     unsigned int |                0
    %              a1 |         1 |    unsigned char |               99
    %              a0 |         4 |              int |              -99
    %     tbl_min_len |         2 |   unsigned short |               16
    %       bypass_qm |         4 |              int |                0
    %       pcnt_unit |         4 |              int |                0
    %    pcnt_channel |         4 |              int |                0
    %ls_show_dir_size |         4 |              int |                1
    esp32#>

Note that for pointers and arrays their address is displayed instead of memory 
content pointed to. To dereference a pointer or to display an array content
one can use "var VARIABLE_NAME":


    esp32#>var a4
    % float * a4 = 0x3ffbdbb4;  // Pointer to 4 bytes memory region
    % a4[1] = {
    %    10.000000, // a4[0]
    % };


Another example:

    esp32#>var table
    % int * table = 0x3ffbdb88;  // Array of 10 elements, (4 bytes per element)
    % table[10] = {
    %    1, // table[0]
    %    2, // table[1]
    %    3, // table[2]
    %    4, // table[3]
    %    5, // table[4]
    %    6, // table[5]
    %    7, // table[6]
    %    8, // table[7]
    %    9, // table[8]
    %    0, // table[9]
    % };

In the same way other variables can be displayed:

    esp32#>var a1
    % unsigned char a1 = 99;  // use "var 99" see this number in hex, oct, bin etc
    esp32#>

To set a variable to new value one can use "var VARIABLE_NAME NEW_VALUE" command.
Lets set value of variable a1 to 88:

    esp32#>var a1 88
    esp32#>var a1
    % unsigned char a1 = 88;  // use "var 88" see this number in hex, oct, bin etc
    esp32#>

There are some basic type checking which forbids setting unsigned variables to 
signed values or assign floating point values to integer variables. Also, changing 
a value of an array has no effect. Address of array is defined by linker and can not
be changed in runtime

Another use of "var" command is to convert & cast numbers:




