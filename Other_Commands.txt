Commands and their description
------------------------------

List of commands can be obtained at any time by typing "?" and pressing <Enter>
Commands can be entered in shortened form: "seq" or even "se" instead of 
"sequence" or "rel" instead of "reload". ESPShell's parser does a partial match
of the command name to user input allowing for shortening command names.

Same applies to command arguments:
For example, instead of entering "pin 2 out open high" one can type something
like "pi 2 ou h" to get the same result. If there is ambiguity happens then
parser just chooses first match:

"pi 2 o h" will expand to "pin 2 open high" not "pin 2 out high" because "open"
is the first in the list for partial match, not "out". Make sure that you use
"short" but not very short commands and arguments


Here is the list of currently supported commands:

% "?"        : Show the list of available commands
% "uptime"   : System uptime
% "show"     : Display information
% "pin"      : GPIO commands
% "cpu"      : Set/show CPU parameters
% "mem"      : Memory usage
% "reload"   : Reset CPU
% "nap"      : CPU sleep
% "iic"      : I2C commands
% "uart"     : UART commands
% "sequence" : Pulses/levels sequence configuration
% "tty"      : IO redirect
% "suspend"  : Suspend sketch execution
% "resume"   : Resume sketch execution
% "tone"     : PWM output
% "count"    : Pulse counter
% "exit"     : Exit


NOTE: "X"below denotes a number: 0, 1, 99 etc


"exit"     - Does nothing. Executed in a command subderictory exits from that 
             subdirectory

"uptime"   - Shows time passed since last boot

"show seq" - Shows information about signal patterns (see Pulse_Generator.txt
             for more  info)

"pin"      - Various pin commands. (see Pin_Commands for more info)

"cpu"      - Shows CPUID, CPU frequency, xtal frequency and bus frequency. 
           - Displays CPU core temperature

"cpu X"    - Set CPU frequency to X MHz. List of supported frequencies is 
           - displayed on attempt to set unsupported frequency:
           -
           - esp32#>cpu 99
           - % Supported frequencies are: 240, 160, 120, 80, 40, 20 and 10

"mem"      - Display memory usage info: total/free memory both on heap and
           - in PSRAM (SPIRAM) if available:
           -
           - esp32#>mem
           - % Chip memory total: 369360, free: 313644
           - % External SPI RAM total:0KB, free: 0KB

"reload"   - Reboots ESP32

"nap"      - Put CPU into light sleep. CPU wakes up by UART activity (press any
           - key to wake up). Wake up condition is 3 positive edges on UART0 
           - which is almost any key (spacebar requires 2 presses).

"nap X"    - PutCPU into light sleep for X seconds, CPU wakes up by timer.

"iic X"    - I2C bus/interface access. See I2C_Commands.txt for more info.

"uart X"   - UART X interface access, UART commands subdirectory. 
           - See UART_Commands.txt for more info

"sequence" - Signal generator commands. Allow for custom signal patterns with 
           - precise timings to be generated on any pin. See Pulse_Generator.txt 
           - for more info

"tty X"    - Use UART X for espshell input / output. Used to run the shell on
           - other uart leaving UART0 purely for sketch.

"suspend"  - Pause Arduino's loop(). Tasks that were started by the loop()
           - task are not suspended

"resume"   - Resume execution of Arduino's loop() previously paused with
           - "suspend" command

"tone X"   - Squarewave generator: generates signal of specified frequency and 
           - duty on pin X. See Tone_Generator_And_Counter.txt for details.

"count X"  - Pulse counter: counts pulses arrived on pin X. Details on the
           - counter and squarewave generator can be found in Tone_Generator_And_Counter.txt
